name: Continuous Integration
"on":
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
   
permissions: write-all

# A workflow run is made up of one or more jobs run sequentailly or in parallel 
jobs:
  build:
    runs-on: ubuntu-latest
# steps represnt a sequence of tasks executed as part of the job
    steps:
    #checkout your repository under $GITHUB_WORKSPACE, so your job can access it
    - name : Checkout
      uses: actions/checkout@v2
      with: 
        fetch-depth: 0
    - id: release
      uses: rymndhng/release-on-push-action@master
      with:
       bump_version_scheme: minor
       release_body: "This is the minor release"
       tag_prefix: "v"
       use_github_release_notes: true
       release_name: "Release <RELEASE_VERSION>"
       max_commits: 100
       
    - name: Check Output Parameters
      run: |
       echo "Got tag name ${{ steps.release.outputs.tag_name }}"
       echo "Got release version ${{ steps.release.outputs.version }}"
    env:
     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
   

  
  
        
# Calculate the version for the build and display the value of the GITVERSION_NUMBER environment varaible
  
#     - name: Semantic Versioning
#       id: versioning
#       uses: PaulHatch/semantic-version@v4.0.2
#       with:
#         branch: main
#         tag_prefix: "v"
#         major_pattern: "BREAKING CHANGE:"
#         minor_pattern: "feat:"
#         format: "v${major}.${minor}.${patch}-prerelease${increment}"
        
      
#     - uses: actions/checkout@v3
#     - uses: rickstaa/action-create-tag@v1
#       with:
#         tag: "v0.2.0"
#         message: "Latest release"
      
#     - name: Create Release
#       uses: actions/create-release@v1
#       id: create_release
#       with:
#           draft: false
#           tag_name: ${{ github.ref }}
#           release_name: ${{ steps.versioning.outputs.version }}
#           prerelease: false
          
#       env:
#        GITHUB_TOKEN: ${{ github.token }}
